name: Testing a Website

on: 
    push:
        branches: ["main", "testing"]
    pull_request:
        branches: ["main"]
    workflow_dispatch:
   
jobs:
    build_website:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
            - name: Build the Website
              run: |
                yarn install
                yarn build
                yarn lint
                ls -l
                echo "Checking inside build folder"
                cd build/
                ls -l
            - uses: actions/upload-artifact@v4
              with:
                name: build
                path: build
                
    test_website:
        runs-on: ubuntu-latest
        needs: build_website
        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
            - name: Download Artifacts
              uses: actions/download-artifact@v4    
            - name: Display structure of downloaded files
              run: ls -R 
            - name: Run website Test
              run: |
                if test -f "build/index.html"; then
                    echo "Test Passed"
                else
                    echo "Test Failed"
                fi

                yarn global add serve
                serve -s build &
                sleep 10
                curl http://localhost:3000 | grep "React App"

    deploy_to_staging:
        runs-on: ubuntu-latest
        needs: test_website
        environment: staging
        steps: 
          - uses: actions/checkout@v4
          - uses: actions/download-artifact@v4
          - uses: actions/setup-python@v2
            with:
                python-version: '3.10'
          - name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                pip install awscli
          - name: Run AWS CLI Commands
            run: |
                echo "You're in AWS Cli mode"
                aws --version
                ls -l
                aws s3 sync build s3://temp-terraform-s3bucket-staging/ --delete
            env: 
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          - name: Test for working website on Staging URL
            run: |
                echo ${{ vars.WEB_URL }}
                curl ${{ vars.WEB_URL }} | grep "React App"

    deploy_to_production:
        runs-on: ubuntu-latest
        needs: deploy_to_staging
        environment: prod
        steps: 
          - uses: actions/checkout@v4
          - uses: actions/download-artifact@v4
          - uses: actions/setup-python@v2
            with:
                python-version: '3.10'
          - name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                pip install awscli
          - name: Run AWS CLI Commands
            run: |
                echo "You're in AWS Cli mode"
                aws --version
                ls -l
                aws s3 sync build s3://temp-terraform-s3bucket/ --delete
            env: 
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          - name: Test for working website on Production URL
            run: |
                echo ${{ vars.WEB_URL }}
                curl ${{ vars.WEB_URL }} | grep "React App"
